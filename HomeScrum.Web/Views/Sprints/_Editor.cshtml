@using HomeScrum.Web.Extensions

@model HomeScrum.Web.Models.Sprints.SprintEditorViewModel

@{
   ViewBag.SprintId = Model.Id;
}

@Scripts.Render( "~/jqPlot" )
@Scripts.Render( "~/jqPlot.plugins" )

   @using (Html.BeginForm( null, null, null, FormMethod.Post, new { id = "Editor", @class = "form-horizontal", role = "form" } ))
   {
      <fieldset>
         <legend class="hidden">Basic Information</legend>

         <div class="form-group">
            @Html.LabelFor( model => model.Name, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextBoxFor( model => model.Name, new { @class = "MainData form-control" } )
               @Html.ValidationMessageFor( model => model.Name )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.Goal, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextBoxFor( model => model.Goal, new { @class = "MainData form-control" } )
               @Html.ValidationMessageFor( model => model.Goal )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.Description, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextAreaFor( model => model.Description, new { @class = "MainData text-box multi-line form-control", rows = "5" } )
               @Html.ValidationMessageFor( model => model.Description )
            </div>
         </div>

         @Html.HiddenFor( m => m.CreatedByUserId )
         @Html.HiddenFor( m => m.CreatedByUserUserName )
         @Html.HiddenFor( m => m.Mode )

      </fieldset>

      <fieldset>
         <legend class="hidden">Properties</legend>

         <div class="form-group">
            @Html.LabelFor( model => model.Capacity, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextBoxFor( model => model.Capacity, new { @class = "MainData form-control" } )
               @Html.ValidationMessageFor( model => model.Capacity )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.TotalPoints, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.DisplayTextFor( model => model.TotalPoints )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.ProjectId, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.DropDownListFor( model => model.ProjectId, Model.Projects, new { @class = "MainData form-control" } )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.StatusId, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.DropDownListWithDataAttributesFor( model => model.StatusId, Model.Statuses, new { @class = "MainData form-control" } )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.StartDate, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextBoxFor( model => model.StartDate, new { @class = "MainData form-control" } )
               @Html.ValidationMessageFor( model => model.StartDate )
            </div>
         </div>

         <div class="form-group">
            @Html.LabelFor( model => model.EndDate, new { @class = "col-sm-2 control-label" } )
            <div class="col-sm-6">
               @Html.TextBoxFor( model => model.EndDate, new { @class = "MainData form-control" } )
               @Html.ValidationMessageFor( model => model.EndDate )
            </div>
         </div>
         @if (Model.EndDate != null && Model.StartDate != null)
         {
            <div class="form-group">
               @Html.Partial( "_BurndownChart", Model )
            </div>
         }
      </fieldset>

      if (Model.Id != Guid.Empty)
      {
         <div class="ChildData">
            <fieldset>
               <legend class="hidden">WorkItems</legend>

               <div id="BacklogItems">
                  <h3>Backlog Items</h3>
                  @Html.Partial( "_WorkItemList", Model.BacklogItems )
                  @Html.ActionLink( "Select Backlog Items", "AddBacklogItems", new { Id = Model.Id, callingId = Model.Id.ToString(), callingAction = "Edit" }, new { id = "BacklogLink", @class = "btn btn-default" } )
               </div>

               <div id="Tasks">
                  <h3>Tasks</h3>
                  @Html.Partial( "_WorkItemList", Model.Tasks )
                  @Html.ActionLink( "Select Tasks", "AddTasks", new { Id = Model.Id, callingId = Model.Id, callingAction = "Edit" }, new { id = "TaskListLink", @class = "btn btn-default" } )
               </div>
            </fieldset>
         </div>
      }

      @Html.ValidationSummary( false )
   }

   <div id="ActionButtonArea"></div>
   <a href="#" id="SubmitButton" class="btn btn-primary"></a>

   @Scripts.Render( "~/Bundles/BaseScripts" )
   @Scripts.Render( "~/bundles/sprintScripts" )

   <script>
      $(document).ready(function () {
         Editor.init();
      });
   </script>
