@model IEnumerable<HomeScrum.Web.Models.Base.SystemDomainObjectViewModel>

@Html.DisplayFor( m => Model, "List" )

<div id="ActionButtonArea">
   @Html.ActionLink( "Create New", "Create", null, new { id = "CreateNewItem" } )
   <input type="checkbox" id="SortableToggle" /><label for="SortableToggle">Allow Sorting</label>
   <input type="checkbox" id="ShowInactiveToggle" /><label for="ShowInactiveToggle">Show Inactive</label>
</div>

<script>
   function postSortData(controllerName) {
      $.ajax({
         url: controllerName + '/UpdateSortOrders/',
         data: { itemIds: $(".ListBody").sortable('toArray') },
         type: 'post',
         traditional: true
      });
   }

   $(function () {
      // jQuery UI stand alone widget init
      $("#CreateNewItem").button();

      setupShowHideButton("@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()", $("#ShowInactiveToggle"), "Inactive");

      // Sortability stuff
      $(".ListBody").sortable();
      $(".ListBody").sortable("disable");
      $(".SortIcon").hide();

      var sortableToggleButton = $("#SortableToggle");
      sortableToggleButton.button();

      sortableToggleButton.click(
          function () {
             if ($(this).is(":checked")) {
                $(this).button("option", "label", "Save Changes");
                $(".ListBody").sortable("enable");
                $(".ListBody").disableSelection();
                $(".SortIcon").show("fade");
             }
             else {
                $(this).button("option", "label", "Allow Sorting");
                $(".ListBody").sortable("disable");
                $(".ListBody").enableSelection();
                postSortData("@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()");
                  $(".SortIcon").hide("fade");
               }
            });
   });
</script>
