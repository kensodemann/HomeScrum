@model IEnumerable<HomeScrum.Web.Models.Base.SystemDomainObjectViewModel>

<table>
    <thead class="ListHead">
        <tr>
            <th class="SortIcon"></th>
            <th class="FirstDataColumn">
                @Html.DisplayNameFor( model => model.Name )
            </th>
            <th class="DescriptiveText">
                @Html.DisplayNameFor( model => model.Description )
            </th>
            <th class="FirstDataColumn">Actions</th>
        </tr>
    </thead>

    <tbody class="ListBody">
        @foreach (var item in Model)
        {
            var rowClass = item.AllowUse ? "ActiveItemRow" : "InactiveItemRow";
                 
            <tr id="@Html.AttributeEncode( item.Id.ToString() )" class="@rowClass">
                <td class="SortIcon"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span></td>
                <td class="FirstDataColumn">
                    @Html.DisplayFor( modelItem => item.Name )
                </td>
                <td class="DescriptiveText">
                    @Html.DisplayFor( modelItem => item.Description )
                </td>
                <td class="LastDataColumn">
                    @Html.ActionLink( "Edit", "Edit", new { id = item.Id } ) |
            @Html.ActionLink( "Details", "Details", new { id = item.Id } )
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="ActionButtonArea">
    @Html.ActionLink( "Create New", "Create", null, new { id = "CreateNewItem" } )
    <input type="checkbox" id="SortableToggle" /><label for="SortableToggle">Allow Sorting</label>
    <input type="checkbox" id="ShowInactiveToggle" /><label for="ShowInactiveToggle">Show Inactive</label>

    <script>
        function postSortData(controllerName) {
            $.ajax({
                url: '/' + controllerName + '/UpdateSortOrders/',
                data: { itemIds: $(".ListBody").sortable('toArray') },
                type: 'post',
                traditional: true
            });
        }

        function showInactiveItems(toggleButton, effect) {
            $(".InactiveItemRow").show(effect);
            toggleButton.button("option", "label", "Hide Inactive");
        }

        function hideInactiveItems(toggleButton, effect) {
            $(".InactiveItemRow").hide(effect);
            toggleButton.button("option", "label", "Show Inactive");
        }

        function shouldShowInactive() {
            return $.localStorage("@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()" + "ShowInactive");
        }

        function saveShowInactiveState(value) {
            $.localStorage("@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()" + "ShowInactive", value);
        }

        function initializeShowInactive(toggleButton) {
            if (shouldShowInactive()) {
                toggleButton.prop("checked", true);
                showInactiveItems(toggleButton);
            }
            else {
                toggleButton.prop("checked", false);
                hideInactiveItems(toggleButton);
            }
            toggleButton.button("refresh");
        }

        $(function () {
            // jQuery UI stand alone widget init
            $("#CreateNewItem").button();
            
            // Show - Hide
            var toggleButton = $("#ShowInactiveToggle");
            toggleButton.button();

            initializeShowInactive(toggleButton);

            toggleButton.click(
                function () {
                    if ($(this).is(":checked")) {
                        showInactiveItems($(this), "fade");
                    }
                    else {
                        hideInactiveItems($(this), "fade");
                    }
                    saveShowInactiveState($(this).is(":checked"));
                });

            // Sortability stuff
            $(".ListBody").sortable();
            $(".ListBody").sortable("disable");
            $(".SortIcon").hide();

            var sortableToggleButton = $("#SortableToggle");
            sortableToggleButton.button();

            sortableToggleButton.click(
                function () {
                    if ($(this).is(":checked")) {
                        $(this).button("option", "label", "Save Changes");
                        $(".ListBody").sortable("enable");
                        $(".ListBody").disableSelection();
                        $(".SortIcon").show("fade");
                    }
                    else {
                        $(this).button("option", "label", "Allow Sorting");
                        $(".ListBody").sortable("disable");
                        $(".ListBody").enableSelection();
                        postSortData("@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()");
                        $(".SortIcon").hide("fade");
                    }
                });
        });
    </script>
</div>
