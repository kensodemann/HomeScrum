@using HomeScrum.Web.Extensions

@model HomeScrum.Web.Models.WorkItems.WorkItemEditorViewModel

@using (Html.BeginForm())
{
    @Html.ValidationSummary( true )

    @Html.Partial( "_DataObjectBaseEditor", Model )

    <fieldset>
        <legend>Properties</legend>

        <div class="formStaticText">
            @Html.LabelFor( model => model.CreatedByUserUserName )
            @Html.DisplayFor( model => model.CreatedByUserUserName )
            @Html.HiddenFor( model => model.CreatedByUserId )
            @Html.ValidationMessageFor( model => model.CreatedByUserId )
        </div>

        <div class="formSelectList">
            @Html.LabelFor( model => model.WorkItemTypeId )
            @Html.DropDownListWithDataAttributesFor( model => model.WorkItemTypeId, Model.WorkItemTypes )
            @Html.ValidationMessageFor( model => model.WorkItemTypeId )
        </div>

        <div class="formSelectList">
            @Html.LabelFor( model => model.StatusId )
            @Html.DropDownListFor( model => model.StatusId, Model.Statuses )
            @Html.ValidationMessageFor( model => model.StatusId )
        </div>

        <div class="formSelectList">
            @Html.LabelFor( model => model.ProjectId )
            @Html.DropDownListFor( model => model.ProjectId, Model.Projects )
            @Html.ValidationMessageFor( model => model.ProjectId )
        </div>

        <div class="formSelectList" id="AssignedToUserDiv">
            @Html.LabelFor( model => model.AssignedToUserId )
            @Html.DropDownListFor( model => model.AssignedToUserId, Model.AssignedToUsers )
            @Html.ValidationMessageFor( model => model.AssignedToUserId )
        </div>

        <div class="formSelectList" id="ParentWorkItemDiv">
            @Html.LabelFor( model => model.ParentWorkItemId )
            @Html.DropDownListWithDataAttributesFor( model => model.ParentWorkItemId, Model.ProductBacklogItems )
            @Html.ValidationMessageFor( model => model.ParentWorkItemId )
        </div>

    </fieldset>
 
    <p>
        <input type="submit" value="@ViewBag.EditorButtonLabel" />
    </p>
    
    <script>
        function ShowHideAssigned(effect) {
            var canBeAssigned = $("#WorkItemTypeId").find(":selected").attr("data-CanBeAssigned");
            if (canBeAssigned == "True") {
                $("#AssignedToUserDiv").show(effect);
            }
            else {
                $("#AssignedToUserDiv").hide(effect);
            }
        }

        function ShowHideParentWorkItem(effect) {
            var canHaveParent = $("#WorkItemTypeId").find(":selected").attr("data-CanHaveParent");
            if (canHaveParent == "True") {
                $("#ParentWorkItemDiv").show(effect);
            }
            else {
                $("#ParentWorkItemDiv").hide(effect);
            }
        }

        function ShowHideDataItems(effect) {
            ShowHideAssigned(effect);
            ShowHideParentWorkItem(effect);
        }

        function SetProjectToParentWorkItemProject() {
            var selectedProject = $("#ProjectId").val();
            var backlogProject = $("#ParentWorkItemId").find(":selected").attr("data-ProjectId");
            if (selectedProject != backlogProject &&
                backlogProject != "00000000-0000-0000-0000-000000000000") {
                $("#ProjectId").val(backlogProject);
            }
        }

        function LimitBacklogItems() {
            var selectedProject = $("#ProjectId").val();
            var backlogProject = $("#ParentWorkItemId").find(":selected").attr("data-ProjectId");
            if (backlogProject != selectedProject) {
                $("#ParentWorkItemId").val("00000000-0000-0000-0000-000000000000");
            }
        }

        $(function () {
            ShowHideDataItems();

            $("#WorkItemTypeId").change(function () {
                ShowHideDataItems("fade");
            });

            $("#ParentWorkItemId").change(function () {
                SetProjectToParentWorkItemProject();
            });

            $("#ProjectId").change(function () {
                LimitBacklogItems();
            });
        });
    </script>
}